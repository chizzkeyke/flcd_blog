import axios from 'axios'
import {
    startFetchPosts,
    successFetchPosts,
    errorFetchPosts,

    createNewPost,
    readOnePost,
    updatePost,
    deletePost
} from 'redux/actions/posts'

const token = localStorage.getItem('token')

export const getPosts = () => dispatch => {
    dispatch(startFetchPosts())
    axios({
        method: 'GET',
        url: 'https://test.flcd.ru/api/post'
    })
        .then(res => {
            // localStorage.setItem('posts', JSON.stringify(res.data))
            dispatch(successFetchPosts(res.data))
            console.log('Data was arrived', res.data)
        })

        .catch(err => {
            console.log(err)
            dispatch(errorFetchPosts(err))
        })
}

export const getOnePost = (id) => dispatch => {
    dispatch(startFetchPosts())
    axios({
        method: 'GET',
        url: `https://test.flcd.ru/api/post/${id}`,
        headers: {
            'accept': '*/*',
            'Authorization': `Bearer ${token}`,
            'Content-type': 'application/json',
        }
    })
        .then(res => {
            dispatch(readOnePost(res.data))
        })
        .catch(err => {
            console.log(err)
        })
}

export const fetchNewPost = (text) => dispatch => {
    axios({
        method: 'POST',
        url: 'https://test.flcd.ru/api/post',
        data: {
            text,
        },
        headers: {
            'accept': '*/*',
            'Authorization': `Bearer ${token}`,
            'Content-type': 'application/json',
        }
    })
        .then(res => {
            console.log('New Blog Is Arrived', res.data)
            dispatch(createNewPost(res.data))
        })
        .catch(() => {
            console.log('Error', err)
        })
}

export const fetchUpdatePost = (id, text) => dispatch => {
    axios({
        method: 'PATCH',
        url: `https://test.flcd.ru/api/post/${id}`,
        data: {
            text,
        },
        headers: {
            'accept': '*/*',
            'Authorization': `Bearer ${token}`,
            'Content-type': 'application/json',
        }
    })
        .then(() => {
            dispatch(updatePost(id, text))
            console.log(`Data post №${id} was update.`)
        })
        .catch(err => {
            console.log(err)
        })
}

export const fetchDeletePost = (id) => dispatch => {
    axios({
        method: 'DELETE',
        url: `https://test.flcd.ru/api/post/${id}`,
        headers: {
            'accept': '*/*',
            'Authorization': `Bearer ${token}`,
            'Content-type': 'application/json',
        }
    })
        .then(res => {
            dispatch(deletePost(id))
            console.log(`Post №${id} was deleted.`)
            console.log(res.status)
        })
}