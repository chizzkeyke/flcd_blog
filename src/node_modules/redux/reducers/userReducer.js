import { GET_USER, GET_AUTH_USER, CLEAR_USER, CLEAR_AUTH_USER } from 'redux/actions/constants'

// const authUserId = JSON.parse(localStorage.getItem('userId'))
// const initialState = authUserId
//    ? {
//       currentUserData: authUserId,
//       findUser: null
//    }
//    : {
//       currentUserData: null,
//       findUser: null
//    }

const initialState = {
   currentUserData: {
      id: null,
      name: null,
      email: null,
      created_at: null
   },
   findUser: {
      id: null,
      name: null
   }
}

export default function userReducer(state = initialState, action) {
   switch (action.type) {
      case GET_USER: {
         const { data } = action.payload
         return {
            ...state,
            findUser: {
               ...data
            }
         }
      }
      case CLEAR_USER: {
         return {
            ...state,
            findUser: null
         }
      }
      case GET_AUTH_USER: {
         const { data } = action.payload
         return {
            ...state,
            currentUserData: {
               ...data
            }
         }
      }
      case CLEAR_AUTH_USER: {
         localStorage.removeItem('user')
         return {
            ...state, 
            currentUserData: null
         }
      }
      default:
         return state;
   }
}